14/03/10   horazont <j.wielicki@sotecware.net>
* Restructured copy/move policy
  * Better performance
  * Calls are *always* Pass-by-reference for strings, records and host objects.

13/03/10   horazont <j.wielicki@sotecware.net>  Release 1.0.6.0
* Implemented host record support.
* Implemented support for htByRef flag on NativeCall functions.

26/12/09   horazont <j.wielicki@sotecware.net>  Release 1.0.5.0
* Improved abstract base class support.
* Made Thorium ready for fpc 2.4.0.
* API CHANGE
  * Added TThoriumReferenceImplementation
    This class implements the default Thorium reference counting and you may use
    it as a reference to implement it on your own OR have a look at
    TThoriumPersistent where you see a good example how to use this class to
    simplify porting classes to Thorium =).
* Some internal structure changes for later use ...
* TThoriumPeristent now inherits from TPersistent

25/10/09   horazont <j.wielicki@sotecware.net>   Release 1.0.4.0
* Fixed a bug in the TThoriumInstructions class which could cause a heavy crash
  under certain circumstances.
* Added lazdoc documentation for Thorium.pas.

24/08/09   horazont <j.wielicki@sotecware.net>   Release 1.0.3.0
* API CHANGE
  * IThoriumPersistent
    * Added EnableHostControl method. This should set a flag which avoids
      freeing of the object by _Release or FreeReference.
    * Added DisableHostControl method. This should reverse the effect of
      EnableHostControl.
  * TThoriumPersistent
    * Adapted to IThoriumPersistent.
* Fixed a bug in the ret-instruction which could generate random crashes when
  returning a value from a function which received at least one parameter.
* Fixed a bug in compile time evaluation of constants. There were problems
  when a unary operator was used on a constant value.

22/08/09   horazont <j.wielicki@sotecware.net>
* Fixed a bug in TThoriumFunction.Call causing every reference counted type
  (i.e. strings & host types) to be freed too early.

21/08/09   horazont <j.wielicki@sotecware.net>
* Added an informative comment to the TThoriumStack.ClearStack method about
  exceptions.
* Added a parameter to allow compiler flags. The first one is the possibility
  of disabling optimization.
* Fixed a bug which created random instructions when passing values to a
  function which are not literally equal to the expected type (fail at
  typecasting). This affected both internal and host functions.
* Removed some (blocking) legacy code when DebugToConsole is enabled.

15/08/09   horazont <j.wielicki@sotecware.net>   Release 1.0.2.0
* Fixed a bug which left the TThoriumValue.Extended.TypeClass field filled with
  zeros on 32-bit. Also made it a little bit safer now by saving the TypeClass
  in the native call instruction directly instead of relying on the previous
  stack content.

06/08/09   horazont <j.wielicki@sotecware.net>   Release 1.0.1.0
* Did a lot of cleanup and splitting.
* Added code regions to the main Thorium files to make them more structured.

01/08/09   horazont <j.wielicki@sotecware.net>
* Fixed a bug which caused NativeCall to fail with different errors on 32-bit
  platforms under certain circumstances (didn't save all registers - thought
  it would be enough -.-)
